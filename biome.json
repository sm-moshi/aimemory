{
	"root": true,
	"$schema": "https://biomejs.dev/schemas/2.0.0-beta.6/schema.json",
	"vcs": {
		"enabled": true,
		"clientKind": "git",
		"useIgnoreFile": true
	},
	"files": {
		"includes": [
			"src/**/*",
			"*.config.{js,ts}",
			"*.json",
			"!**/dist/**",
			"!**/out/**",
			"!**/node_modules/**",
			"!**/coverage/**",
			"!**/.vscode-test/**",
			"!**/.cursor/**",
			"!**/*.d.ts"
		]
	},
	"formatter": {
		"enabled": true,
		"indentWidth": 4,
		"lineWidth": 120
	},
	"javascript": {
		"formatter": {
			"jsxQuoteStyle": "double",
			"trailingCommas": "all",
			"semicolons": "always",
			"arrowParentheses": "asNeeded"
		}
	},
	"linter": {
		"enabled": true,
		"rules": {
			"performance": {
				"noAccumulatingSpread": "warn",
				"noDelete": "warn"
			},
			"security": {
				"noDangerouslySetInnerHtml": "error",
				"noGlobalEval": "error"
			},
			"complexity": {
				"noBannedTypes": "error",
				"noUselessTypeConstraint": "error"
			},
			"style": {
				"useNamingConvention": {
					"level": "error",
					"options": {
						"strictCase": false,
						"conventions": [
							{
								"selector": {
									"kind": "function"
								},
								"formats": ["camelCase", "PascalCase"]
							},
							{
								"selector": {
									"kind": "interface"
								},
								"formats": ["PascalCase"]
							},
							{
								"selector": {
									"kind": "typeAlias"
								},
								"formats": ["PascalCase"]
							},
							{
								"selector": { "kind": "classProperty" },
								"formats": ["camelCase", "PascalCase", "CONSTANT_CASE"]
							}
						]
					}
				},
				"useConsistentArrayType": "error",
				"useShorthandAssign": "error",
				"noParameterAssign": "error",
				"useAsConstAssertion": "error",
				"useDefaultParameterLast": "error",
				"useEnumInitializers": "error",
				"useSelfClosingElements": "error",
				"useSingleVarDeclarator": "error",
				"noUnusedTemplateLiteral": "error",
				"useNumberNamespace": "error",
				"noInferrableTypes": "error",
				"noUselessElse": "error"
			},
			"correctness": {
				"noUnusedImports": "error"
			}
		}
	},
	"overrides": [
		{
			"includes": ["**/*.test.ts", "**/*.test.tsx", "**/*.spec.ts", "**/*.spec.tsx", "**/test/**/*.ts"],
			"linter": {
				"rules": {
					"style": {
						"useNamingConvention": "off"
					},
					"suspicious": {
						"noExplicitAny": "off"
					},
					"correctness": {
						"noUnusedVariables": "off"
					}
				}
			}
		},
		{
			"includes": ["**/src/webview/**/*", "**/*.d.ts"],
			"linter": {
				"rules": {
					"suspicious": {
						"noExplicitAny": "off"
					},
					"style": {
						"useNamingConvention": "off"
					}
				}
			}
		},
		{
			"includes": [
				"**/*.config.{js,ts}",
				"**/vite.config.{js,ts}",
				"**/rollup.config.{js,ts}",
				"**/vitest.config.{js,ts}"
			],
			"linter": {
				"rules": {
					"suspicious": {
						"noExplicitAny": "off"
					},
					"style": {
						"useNamingConvention": "off"
					}
				}
			}
		}
	]
}
