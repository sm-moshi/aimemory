{
	"$schema": "https://biomejs.dev/schemas/1.9.4/schema.json",
	"vcs": {
		"enabled": true,
		"clientKind": "git",
		"useIgnoreFile": true
	},
	"files": {
		"ignore": [
			"**/dist/**",
			"**/node_modules/**",
			"**/coverage/**",
			".vscode-test/**",
			".cursor/**",
			".repomix/**",
			"**/*.d.ts",
			"**/build/**",
			"**/.next/**",
			"**/.cache/**"
		]
	},
	"formatter": {
		"indentWidth": 4,
		"lineWidth": 100,
		"lineEnding": "lf"
	},
	"javascript": {
		"formatter": {
			"jsxQuoteStyle": "double",
			"trailingCommas": "all",
			"semicolons": "always",
			"arrowParentheses": "asNeeded"
		}
	},
	"linter": {
		"rules": {
			"performance": {
				"noAccumulatingSpread": "warn",
				"noDelete": "warn"
			},
			"security": {
				"noDangerouslySetInnerHtml": "error",
				"noGlobalEval": "error"
			},
			"complexity": {
				"noBannedTypes": "error",
				"noUselessTypeConstraint": "error"
			},
			"style": {
				"useNamingConvention": {
					"level": "error",
					"options": {
						"requireAscii": false,
						"conventions": [
							{
								"selector": {
									"kind": "function"
								},
								"formats": ["camelCase", "PascalCase"]
							},
							{
								"selector": {
									"kind": "interface"
								},
								"formats": ["PascalCase"]
							},
							{
								"selector": {
									"kind": "typeAlias"
								},
								"formats": ["PascalCase"]
							}
						]
					}
				},
				"useConsistentArrayType": "error",
				"useShorthandAssign": "error"
			},
			"correctness": {
				"noUnusedVariables": {
					"level": "error"
				},
				"noUnusedImports": "error"
			}
		}
	},
	"overrides": [
		{
			"include": ["**/*.test.ts", "**/*.test.tsx", "**/*.spec.ts", "**/*.spec.tsx"],
			"linter": {
				"rules": {
					"suspicious": {
						"noExplicitAny": "off"
					}
				}
			}
		},
		{
			"include": ["src/webview/**/*", "**/*.d.ts"],
			"linter": {
				"rules": {
					"suspicious": {
						"noExplicitAny": "off"
					},
					"style": {
						"useNamingConvention": "off",
						"useFilenamingConvention": "off"
					},
					"a11y": {
						"noBlankTarget": {
							"level": "error",
							"options": {
								"allowDomains": ["localhost"]
							}
						}
					}
				}
			}
		},
		{
			"include": [
				"**/*.config.{js,ts}",
				"**/vite.config.{js,ts}",
				"**/rollup.config.{js,ts}",
				"**/vitest.config.{js,ts}",
				"**/tsconfig*.json"
			],
			"linter": {
				"rules": {
					"suspicious": {
						"noExplicitAny": "off"
					},
					"style": {
						"useNamingConvention": "off"
					}
				}
			}
		}
	]
}
