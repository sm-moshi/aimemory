name: CI

on:
  push:
    branches: [ main, develop, 'feature/*', 'release/*', 'hotfix/*' ]
  pull_request:
  workflow_dispatch:


permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }} @ ${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        node: [ 20, 22, 24 ]
    steps:
    - uses: actions/checkout@v4
    - uses: pnpm/action-setup@v4
      with:
        version: 8
        run_install: false
        cache: true
    - uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node }}
        cache: 'pnpm'
    - run: corepack enable
    - run: pnpm install --frozen-lockfile
    - name: Cache dist output
      uses: actions/cache@v3
      with:
        path: dist
        key: ${{ runner.os }}-dist-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-dist-
    - run: pnpm build
    - name: Upload VSIX package
      uses: actions/upload-artifact@v4
      with:
        name: vsix-package
        path: dist/*.vsix

  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: build
    strategy:
      matrix:
        node: [ 20, 22, 24 ]
    steps:
    - uses: actions/checkout@v4
    - uses: pnpm/action-setup@v4
      with:
        version: 8
        run_install: false
        cache: true
    - uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node }}
        cache: 'pnpm'
    - run: corepack enable
    - run: pnpm install --frozen-lockfile
    - run: pnpm lint

  typecheck:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: build
    strategy:
      matrix:
        node: [ 20, 22, 24 ]
    steps:
    - uses: actions/checkout@v4
    - uses: pnpm/action-setup@v4
      with:
        version: 8
        run_install: false
        cache: true
    - uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node }}
        cache: 'pnpm'
    - run: corepack enable
    - run: pnpm install --frozen-lockfile
    - run: pnpm check-types

  test:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: [ build, lint, typecheck ]
    strategy:
      matrix:
        node: [ 20, 22, 24 ]
    steps:
    - uses: actions/checkout@v4
    - uses: pnpm/action-setup@v4
      with:
        version: 8
        run_install: false
        cache: true
    - uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node }}
        cache: 'pnpm'
    - run: corepack enable
    - run: pnpm install --frozen-lockfile
    - run: pnpm test:unit -- --coverage
    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: coverage/
    - run: pnpm test
